{"version":3,"sources":["js/reducers/index.js","js/store/index.js","js/constants/action-types.js","js/components/CardFront.js","js/components/List.js","js/actions/index.js","js/components/CardList.js","js/components/Deck.js","js/components/DiscardPile.js","js/components/PlayActions.js","js/components/StartingHealth.js","js/components/HealthTracker.js","js/components/CurrentHealth.js","js/components/MainSection.js","js/components/AppButtons.js","js/components/App.js","js/index.js"],"names":["initialState","articles","cards","name","id","screen","inDiscard","inDeck","startHP","gravehold","nemesis","currentHP","shuffleArray","array","i","length","j","Math","floor","random","_ref","store","rootReducer","hp","state","arguments","undefined","action","type","slice","Object","objectSpread","assign","toConsumableArray","concat","payload","idToRemove","filter","card","value","storedState","window","localStorage","getItem","createStore","JSON","parse","subscribe","getState","setItem","stringify","CardFront","onClick","react_default","a","createElement","className","style","background","width","height","marginLeft","textAlign","List","connect","dispatch","removeCard","event","target","display","map","components_CardFront","key","ConnectedForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","title","selectedOption","handleOptionChange","bind","assertThisInitialized","handleSubmit","setState","preventDefault","uuidv1","props","addCard","_this2","GetButtons","checked","onChange","onSubmit","Component","CardList","article","Deck","revealCard","DiscardPile","returnCard","PlayActions","shuffleCards","startHP1","startHP2","setStartingHP","data","HealthTracker","increaseHP","decreaseHP","getHealthClass","CurrentHealth","currentHP1","currentHP2","setCurrentHP","components_HealthTracker","MainScreen","components_CurrentHealth","components_Deck","components_DiscardPile","components_PlayActions","components_List","components_CardList","StartingHealth","AppButtons","endSetup","label","console","log","App","MainSection","components_AppButtons","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ebf98fc4.chunk.js","sourcesContent":["import { \n    ADD_CARD, REMOVE_CARD, SHUFFLE_CARDS, END_SETUP, REVEAL_CARD, RETURN_CARD, SET_STARTINGHP, SET_CURRENTHP\n} from \"../constants/action-types\";\n\nconst initialState = {\n    articles: [],\n    cards: [\n        {name: \"Nemesis\", id: \"default1\"},\n        {name: \"Nemesis\", id: \"default2\"},\n    ],\n    screen: \"SETUP\",\n    inDiscard: [],\n    inDeck: [],\n    startHP: {gravehold: 30, nemesis: 70},\n    currentHP: {gravehold: 30, nemesis: 70},\n};\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nconst rootReducer = (state = initialState, action) => {\n    let cards, hp;\n\n    switch (action.type) {\n        case END_SETUP:\n            if (state.screen === \"SETUP\") {\n                const cards = state.cards.slice();\n                shuffleArray(cards);\n                return {\n                    ...state, \n                    screen: \"PLAY\", \n                    inDeck: cards, \n                    inDiscard: [],\n                    currentHP: Object.assign({}, state.startHP),\n                };\n            }\n            return {...state, screen: \"SETUP\"};\n        case ADD_CARD:\n            return {...state, cards: [...state.cards, action.payload] };\n        case REMOVE_CARD:\n            const idToRemove = action.payload.id;\n            cards = state.cards.filter(card => {\n                return card.id !== idToRemove;\n            })\n            return {...state, cards: cards};\n        case SHUFFLE_CARDS:\n            cards = state.cards.slice();\n            shuffleArray(cards);\n            return { ...state, inDeck: cards, inDiscard: [] };\n        case REVEAL_CARD:\n            return {\n                ...state,\n                inDeck: state.inDeck.slice(1),\n                inDiscard: [state.inDeck[0], ...state.inDiscard]\n            }\n        case RETURN_CARD:\n            return {\n                ...state,\n                inDiscard: state.inDiscard.slice(1),\n                inDeck: [state.inDiscard[0], ...state.inDeck]\n            }\n        case SET_STARTINGHP:\n            hp = Object.assign(state.startHP);\n            hp[action.payload.type] = action.payload.value;\n            return {...state, startHP: hp};\n        case SET_CURRENTHP:\n            hp = Object.assign(state.currentHP);\n            hp[action.payload.type] = action.payload.value;\n            return {...state, currentHP: hp};\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst storedState = window.localStorage ? localStorage.getItem(\"state\") : null;\nlet store;\nif (storedState) {\n    store = createStore(rootReducer, JSON.parse(storedState));\n} else {\n    store = createStore(rootReducer);\n}\n\nif (window.localStorage) {\n    store.subscribe(() => {\n        const state = store.getState();\n        localStorage.setItem(\"state\", JSON.stringify(state));\n    });\n}\n\nexport default store;","export const END_SETUP = \"END_SETUP\";\nexport const ADD_CARD = \"ADD_CARD\";\nexport const REMOVE_CARD = \"REMOVE_CARD\";\nexport const SHUFFLE_CARDS = \"SHUFFLE_CARDS\";\nexport const REVEAL_CARD = \"REVEAL_CARD\";\nexport const RETURN_CARD = \"RETURN_CARD\";\nexport const SET_STARTINGHP = \"SET_STARTINGHP\";\nexport const SET_CURRENTHP = \"SET_CURRENTHP\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst CardFront = ({ card, onClick }) => (\n\n    <div className=\"cardFront\" id={card.id} onClick={onClick} style = {{\n            background: \"gray\",\n            width: 100,\n            height: 150,\n            marginLeft: \"5px\",\n            textAlign: \"center\",\n    }}>\n        {card.name}\n    </div>\n)\n\nexport default CardFront;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CardFront from \"./CardFront\";\nimport { removeCard } from \"../actions/index\";\n\nconst mapStateToProps = state => {\n    return { cards: state.cards };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeCard: (payload) => dispatch(removeCard(payload)),\n    };\n};\n\nconst UI = ({ cards, removeCard }) => {\n    const onClick = (event) => {\n        removeCard({id: event.target.id});\n    }\n\n    return (\n    <div style = {{display: \"flex\", height:160}}>\n        {cards.map((card) => (\n            <CardFront key={card.id} card={card} onClick={onClick} />\n        ))}\n    </div>\n    )\n}\n\nconst List = connect(mapStateToProps, mapDispatchToProps)(UI);\n\nexport default List;","import { \n    ADD_CARD, REMOVE_CARD, SHUFFLE_CARDS, END_SETUP, REVEAL_CARD, RETURN_CARD, SET_STARTINGHP, SET_CURRENTHP\n} from \"../constants/action-types\";\n\nexport const setStartingHP = hp => ({\n    type: SET_STARTINGHP,\n    payload: {\n        type: hp.type,\n        value: hp.value\n    }\n});\n\nexport const setCurrentHP = hp => ({\n    type: SET_CURRENTHP,\n    payload: {\n        type: hp.type,\n        value: hp.value\n    }\n});\n\nexport const addCard = card => ({ \n    type: ADD_CARD, payload: {\n        id: card.id,\n        name: card.name\n    }\n});\n\nexport const removeCard = card => ({ \n    type: REMOVE_CARD, payload: {\n        id: card.id\n    }\n});\n\nexport const endSetup = () => ({\n    type: END_SETUP, payload: {}\n});\n\nexport const shuffleCards = () => ({\n    type: SHUFFLE_CARDS, payload: {}\n});\n\nexport const revealCard = () => ({\n    type: REVEAL_CARD, payload: {}\n});\n\nexport const returnCard = () => ({\n    type: RETURN_CARD, payload: {}\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addCard } from \"../actions/index\";\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addCard: article => dispatch(addCard(article))\n    };\n};\n\nclass ConnectedForm extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            title: \"\",\n            selectedOption: \"\",\n        };\n\n        this.handleOptionChange = this.handleOptionChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleOptionChange(event) {\n        this.setState({ selectedOption: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { selectedOption } = this.state;\n        const id = uuidv1();\n        this.props.addCard({ name: selectedOption, id });\n        this.setState({ selectedOption: \"\" });\n    }\n\n    render() {\n        //const that=this;\n        const GetButtons = (props) => {\n            const name = props.card;\n            return(\n                <div className=\"radio\">\n                    <label>\n                        <input\n                            type=\"radio\"\n                            value={name}\n                            checked={this.state.selectedOption === name}\n                            onChange={this.handleOptionChange}\n                        />\n                        {name}\n                    </label>\n                </div>\n            )\n        };\n\n        return(\n            <div>\n            <form onSubmit={this.handleSubmit}>\n                {GetButtons({card:\"Nemesis\"})}\n                {GetButtons({card:\"Player One\"})}\n                {GetButtons({card:\"Player Two\"})}\n                {GetButtons({card:\"Player Three\"})}\n                {GetButtons({card:\"Player Four\"})}\n                {GetButtons({card:\"Player One/Two\"})}\n                {GetButtons({card:\"Player Three/Four\"})}\n                {GetButtons({card:\"Wild\"})}\n\n                <button type=\"submit\" className=\"btn btn-success btn-lg\">\n                    ADD\n                </button>\n            </form>\n            </div>\n        );\n    }\n}\n\nconst CardList = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default CardList;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { revealCard } from \"../actions/index\";\n\nconst mapStateToProps = state => {\n    return { cards: state.inDeck };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        revealCard: () => dispatch(revealCard()),\n    };\n};\n\nconst UI = ({ cards, revealCard }) => {\n    const onClick = () => {\n        revealCard();\n    }\n\n    return (\n    <div className=\"deckHolder\">\n        {cards.map((card) => (\n            <div className=\"cardBack\" onClick={onClick}/>\n        ))}\n    </div>\n    )\n}\n\n\nconst Deck = connect(mapStateToProps, mapDispatchToProps)(UI);\nexport default Deck;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { returnCard } from \"../actions/index\";\nimport CardFront from \"./CardFront\";\n\nconst mapStateToProps = state => {\n    return { cards: state.inDiscard };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        returnCard: () => dispatch(returnCard()),\n    };\n};\n\nconst UI = ({ cards, returnCard }) => {\n    const onClick = () => {\n        returnCard();\n    }\n\n    return (\n    <div className=\"deckHolder\">\n        {cards.map((card) => (\n            <CardFront key={card.id} card={card} onClick={onClick} />\n        ))}\n    </div>\n    )\n}\n\n\nconst DiscardPile = connect(mapStateToProps, mapDispatchToProps)(UI);\nexport default DiscardPile;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { shuffleCards } from \"../actions/index\";\n\nconst mapStateToProps = state => {\n    return { cards: state.inDiscard };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        shuffleCards: () => dispatch(shuffleCards()),\n    };\n};\n\nconst UI = ({ cards, shuffleCards }) => {\n    const onClick = () => {\n        shuffleCards();\n    }\n\n    return (\n    <button onClick={onClick}>Shuffle All</button>\n    )\n}\n\n\nconst PlayActions = connect(mapStateToProps, mapDispatchToProps)(UI);\nexport default PlayActions;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setStartingHP } from \"../actions/index\";\n\nconst mapStateToProps = state => {\n    return { \n        startHP1: state.startHP.gravehold,\n        startHP2: state.startHP.nemesis,  \n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setStartingHP: (data) => dispatch(setStartingHP(data)),\n    };\n};\n\nconst UI = ({ startHP1, startHP2, setStartingHP }) => {\n    const onChange1 = (event) => {\n        setStartingHP({\n            type: \"gravehold\",\n            value: event.target.value\n        });\n    }\n\n    const onChange2 = (event) => {\n        setStartingHP({\n            type: \"nemesis\",\n            value: event.target.value\n        });\n    }\n\n    return (\n    <div>\n        <label>\n            Gravehold: \n            <input className=\"hpInput\" type=\"text\" value={startHP1} onChange={onChange1} />\n        </label><br/>\n\n        <label>\n            Nemesis: \n            <input className=\"hpInput\" type=\"text\" value={startHP2} onChange={onChange2} />\n        </label>\n    </div>\n    )\n}\n\nconst Deck = connect(mapStateToProps, mapDispatchToProps)(UI);\nexport default Deck;","import React from \"react\";\n\nconst getHealthClass = (startHP, hp) => {\n    if (hp >= startHP) {\n        return \"healthNumber goodHealth\";\n    }\n    if (hp < startHP/2) {\n        return \"healthNumber badHealth\";\n    }\n    return \"healthNumber okHealth\";\n}\n\nconst HealthTracker = ({ startHP, hp, increaseHP, decreaseHP }) => {\n\n    return (\n    <div className=\"healthTracker\">\n        <div className=\"healthButton\" onClick={decreaseHP}>-</div>\n        <div className={getHealthClass(startHP, hp)}>{hp}</div>\n        <div className=\"healthButton\" onClick={increaseHP}>+</div>\n    </div>\n    )\n}\n\nexport default HealthTracker;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setCurrentHP } from \"../actions/index\";\nimport HealthTracker from \"./HealthTracker\";\n\nconst mapStateToProps = state => {\n    return { \n        currentHP1: state.currentHP.gravehold,\n        currentHP2: state.currentHP.nemesis,\n        startHP1: state.startHP.gravehold,\n        startHP2: state.startHP.nemesis,  \n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentHP: (data) => dispatch(setCurrentHP(data)),\n    };\n};\n\nconst UI = ({ currentHP1, currentHP2, startHP1, startHP2, setCurrentHP }) => {\n    const increaseHP1 = (event) => {\n        setCurrentHP({\n            type: \"gravehold\",\n            value: currentHP1 + 1\n        });\n    }\n\n    const decreaseHP1 = (event) => {\n        setCurrentHP({\n            type: \"gravehold\",\n            value: currentHP1 - 1\n        });\n    }\n\n    const increaseHP2 = (event) => {\n        setCurrentHP({\n            type: \"nemesis\",\n            value: currentHP2 + 1\n        });\n    }\n\n    const decreaseHP2 = (event) => {\n        setCurrentHP({\n            type: \"nemesis\",\n            value: currentHP2 - 1\n        });\n    }\n\n    return (\n    <div className=\"currentHealth\">\n        <div>\n            Gravehold: <HealthTracker startHP={startHP1} hp={currentHP1} increaseHP={increaseHP1} decreaseHP={decreaseHP1} />\n        </div>\n\n        <div>\n            Nemesis: <HealthTracker startHP={startHP2} hp={currentHP2} increaseHP={increaseHP2} decreaseHP={decreaseHP2} />\n        </div>\n    </div>\n    )\n}\n\n\nconst CurrentHealth = connect(mapStateToProps, mapDispatchToProps)(UI);\nexport default CurrentHealth;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport List from \"./List\";\nimport CardList from \"./CardList\";\nimport Deck from \"./Deck\";\nimport DiscardPile from \"./DiscardPile\";\nimport PlayActions from \"./PlayActions\";\nimport StartingHealth from \"./StartingHealth\";\nimport CurrentHealth from \"./CurrentHealth\";\n\nconst mapStateToProps = state => {\n    return { screen: state.screen };\n};\n\nconst Screen = ({ screen }) => {\n    if (screen === \"PLAY\") {\n        return(\n            <div>\n                <h1>PLAYING</h1>\n\n                <div className=\"col-md-4 offset-md-1\">\n                    <h2>Health</h2>\n                    <CurrentHealth />\n\n                    <h2>Cards</h2>\n                    <Deck />\n                    <DiscardPile />\n                    <PlayActions />\n                </div>\n            </div>\n        );\n    }\n\n    return(\n    <div>\n        <div className=\"col-md-4 offset-md-1\">\n            <h2>Cards</h2>\n            <List />\n        </div>\n\n        <div className=\"col-md-4 offset-md-1\">\n            <h2>Add a new card</h2>\n            <CardList />\n        </div>\n\n        <div className=\"col-md-4 offset-md-1\">\n            <h2>Starting Health</h2>\n            <StartingHealth />\n        </div>\n    </div>\n    )\n}\n\nconst MainScreen = connect(mapStateToProps)(Screen);\nexport default MainScreen;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { endSetup } from \"../actions/index\";\n\nconst mapStateToProps = state => {\n    return { screen: state.screen };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        endSetup: () => dispatch(endSetup()),\n    };\n};\n\n\n\nconst ButtonDiv = ({ screen, endSetup }) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"switch screen\");\n        endSetup();\n    };\n\n    const label = (screen === \"SETUP\") ? \"Start Game\" : \"Return to Setup\";\n\n    return(\n    <div>\n        <form onSubmit={handleSubmit}>\n            <button type=\"submit\">{label}</button>\n        </form>\n    </div>\n    )\n};\n\nconst AppButtons = connect(mapStateToProps, mapDispatchToProps)(ButtonDiv);\n\nexport default AppButtons;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport MainScreen from \"./MainSection\";\nimport AppButtons from \"./AppButtons\";\n\nconst App = () => (\n    <div className=\"row mt-5\">\n        <MainScreen />\n\n        <p/>\n        <AppButtons />\n    </div>\n)\n\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport App from \"./components/App\";\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"app\")\n);"],"sourceRoot":""}